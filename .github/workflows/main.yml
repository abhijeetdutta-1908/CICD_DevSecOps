name: DevSecOps CI Pipeline üöÄ

on:
  push:
    branches: [ main ]
    # paths-ignore:
    #   - 'k8s/**' # Prevent loop when workflow updates k8s manifests

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my-vite-app # MUST MATCH YOUR TERRAFORM VARIABLE
  EKS_CLUSTER_NAME: vite-app-cluster # MUST MATCH YOUR TERRAFORM VARIABLE

jobs:
  security-scans:
    name: Security Scanning üõ°Ô∏è
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Scan Terraform code with tfsec
        run: |
            curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install.sh | bash -s -- -b /usr/local/bin
            tfsec ./infra
      - name: Build Docker image for Trivy scan
        run: docker build -t temp-image-for-scan .
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'temp-image-for-scan'
          format: 'table'
          severity: 'HIGH,CRITICAL'

  build-and-push:
    name: Build & Push to ECR üê≥
    runs-on: ubuntu-latest
    needs: security-scans
    permissions:
      contents: read
    outputs:
      image_tag: ${{ steps.build-image.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  update-manifest:
    name: Update K8s Manifest üìù
    runs-on: ubuntu-latest
    needs: build-and-push

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Update deployment with new image tag
        run: |
          # The image name must match what you will put in deployment.yaml
          # Example: <AWS_ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/my-vite-app:latest
          # The sed command below replaces 'latest' with the new git sha tag
          sed -i "s|image: .*/${{ env.ECR_REPOSITORY }}:.*|image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ needs.build-and-push.outputs.image_tag }}|" k8s/deployment.yaml
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add k8s/deployment.yaml
          git commit -m "Update image tag to ${{ needs.build-and-push.outputs.image_tag }}"
          git push
